namespace iio\inroute;
class Dependencies {
    private $container;
    public function __construct(\Pimple $container) {
        $this->container = $container;
    }
    {{# controllers }}
    public function {{ cntrlFactory }}(){
        {{# injections }}
            {{# params }}
                {{ name }} = $this->container["{{ factory }}"];
                {{# class }}
                if (!{{ class }} instanceof \{{ class }}) {
                    throw new DependencyExpection("DI-container method '{{ factory }}' must return a {{ class }} instance.");
                }
                {{/ class }}
                {{# isArray }}
                if (!is_array({{ name }})) {
                    throw new DependencyExpection("DI-container method '{{ factory }}' must return an array.");
                }
                {{/ isArray }}
            {{/ params }}
        {{/ injections }}

        return new \{{ controller }}({{ signature }});
    }
    {{/ controllers }}
}
