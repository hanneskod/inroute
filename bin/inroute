#!/usr/bin/env php
<?php

namespace itbz\inroute {

require 'phar://Inroute.phar/vendor/autoload.php';
}
namespace itbz\test {
    class Container extends \Pimple
    {
        public function __construct()
        {
            $this['foobar'] = function ($c) {
                return new \DateTime;
            };
            $this['xfactory'] = function ($c) {
                return array();
            };
            $this['xx'] = function ($c) {
                return 'xx';
            };
        }
    }
}

namespace itbz\inroute {

$loader = new \Mustache_Loader_ArrayLoader(array(
    'Dependencies' => file_get_contents('phar://Inroute.phar/src/itbz/inroute/Templates/Dependencies.mustache'),
    'routes' => file_get_contents('phar://Inroute.phar/src/itbz/inroute/Templates/routes.mustache'),
    'static' => file_get_contents('phar://Inroute.phar/src/itbz/inroute/Templates/static.mustache')
));
$mustache = new \Mustache_Engine(array('loader' => $loader));
$generator = new CodeGenerator($mustache);

$factory = new InrouteFactory($generator);

$factory->loadJson('../inroute.json');
$inroute = eval($factory->generate());

echo $inroute->dispatch('/foo/yeah', $_SERVER);

}
